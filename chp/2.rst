第二章：快速入门
===================
2.1 获得Erlang
-----------------
2.1.1 快速安装
^^^^^^^^^^^^^^^^^^^
1. Microsoft Windows
从http://www.erlang.org/download.html 选择版本下载


2. Linux
基于Debian的系统中，如Debian, Ubuntu等，
> sudo apt-get install erlang
Redhat系列系统中，
> sudo yum install eralng

3. Mac OS X
通过MacPort, sudo port install erlang

2.1.2 通过源代码安装
^^^^^^^^^^^^^^^^^^^^^^^^^
1.获取Erlang源代码
通过浏览器或wget等工具
2.解压并安装
$ tar -xzf otp_src_R11B-4.tar.gz
$ cd otp_src_R11B-4
$ ./configure
$ make
$ sudo make install

2.2 安装CEAN模块管理器
-----------------------------
类似Perl的CPAN,几乎包含所有Erlang开源项目.通过cean:install命令可用获取需要的模块









2.3 运行Erlang代码
-------------------
Erlang Shell

类似Python, Ruby等脚本语言，Erlang有一个交互式工作环境Eshell
打开命令终端，输入erl启动Eshell。(Windows下也可双击"Erlang"图标。)

::
   
   Eshell V5.9.2 (abort with ^G)

   >1


你可以在里面调用已定义函数，输入表达式。
::
    >1 2 + 1.
    3
    >2 "hello".
    hello
    >3 eralng:halt().

在Eshell中可以进行交互式开发、调试、升级。
通过快捷键Ctrl + C,或者输入erlang:halt()退出系统。

.. note::
           Eshell还有其他一些有用的函数 

             -  **help()**\           列举可用的shell函数
             -  **cd()**\             改变当前目录
             -  **ls()**\             列举目录内容
             -  **i()**\              输出当前系统的运行时信息
             -  **memory()**\         输出内存使用信息
 



当然也可也把程序写入文件。
新建一个文件 hello.erl
::
     % hello.erl  

     -module(hello).
     -export([say_hello/0]).

     sat_hello() ->
     io:format("hello~n").



首行以"%"开头表示注释。接下来的module和export分别表示模块名和该模块中导出的函数。一个文件包含一个模块，且名字相同.

经导出的函数可以被外部调用，否则只能被同模块的函数调用
export可以分为多行写，如，
::
    -export([fun1/0, fun2/1]).
    -export([fun3/0, fun4/2]).

也可通过
::
    -compile(export_all)
直接导出所有函数

现在我们来运行这个文件。

1. 在Eralng shell里运行
::
    Eshell V5.9.2 (abort with ^G)
    1> c(hello).
    {ok, hello}
    2> hello:say_hello().
    hello
    ok

{ok,hello} 表示hello模块编译成功。


hello:say_hello()运行hello模块的say_hello函数，得到结果hello

2. 在命令行中编译运行
::
   $ erlc hello.erl
   $ erl -s heloo say_hello
   hello 

3.作为ecsript脚本运行

2.4 开发环境
--------------
2.4.1 
- Erlang Shell
- makefiles
- emacs

2.4.1 Eclipse
Eclipse + elide

